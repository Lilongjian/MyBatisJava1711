<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- <mapper namespace="student"> -->
 <mapper namespace="com.situ.mybatis.dao.IStudentDao">
    <sql id="studentColums">
    name,age,gender,address
    </sql>
    <!-- resultMap最终是要将结果映射到Student上，
		type:就是指定映射到哪一个pojo上 。
		当实体属性名字和表的字段名字不相同时候，必须要写映射。
		当实体属性名字和表的字段名字相同时候，这个映射是可选。-->
    <resultMap type="Student" id="studentMap">
		<!-- 映射主键属性：如果有多个字段，则定义多个id-->
		<!-- property: 主键在pojo中的属性名 -->
		<!-- column:主键在数据库中的列明  -->
		<id property="id" column="stu_id"/>
		<!-- result定义普通属性 -->
		<result property="name" column="stu_name"/>
		<result property="age" column="stu_age"/>
		<result property="gender" column="gender"/>
	</resultMap>
	<!-- 查找所有 -->
	<select id="findAll2" resultMap="studentMap">
		SELECT stu_id,stu_name,stu_age,gender,address FROM student
	</select>
	<!-- 通过id查找学生 -->
	<select id="findById" parameterType="java.lang.Integer" resultType="Student">
		select <include refid="studentColums"/> from student where id=#{id}
	</select>
	<!--  查找所有学生-->
	<select id="findAll" resultType="com.situ.mybatis.entity.Student">
		select * from student
	</select>
	<!--  根据名字模糊查找-->
	<select id="findByName" parameterType="string" resultType="com.situ.mybatis.entity.Student">
		select * from student where name like '%${value}%'
	</select>
	<!--  添加-->
	<!-- <insert id="save" parameterType="com.situ.mybatis.entity.Student">
	insert into student(name,age,gender,address)
	values(#{name},#{age},#{gender},#{address});
	</insert> -->
	<insert id="save" parameterType="Student">
	  insert into student(name,age,gender,address)
	  values(#{name},#{age},#{gender},#{address});
	</insert>
	
	<!--  更新-->
	<update id="update" parameterType="com.situ.mybatis.entity.Student">
        update student
        set name=#{name},age=#{age},gender=#{gender},address=#{address}
        where id=#{id}
    </update>
    
     <!-- 根据id删除 -->
    <delete id="deleteById" parameterType="int">
        delete from student where id=#{id}
    </delete>
    
    <!-- 删除 -->
    <delete id="delete" parameterType="com.situ.mybatis.entity.Student">
        delete from student where id=#{id}
    </delete>
    
    <!-- 根据SearchVO中Student名字模糊查找 -->
    <!-- <select id="findBySearchVO" parameterType="SearchVO" resultType="Student">
       select * from student where name like '%${student.name}%'
    </select> -->
    <select id="findBySearchVO" parameterType="SearchVO" resultType="Student">
    SELECT * FROM student WHERE NAME LIKE '%${student.name}%'
    </select>
    <!-- 将多个参数放到map里面 -->
    <select id="findByPage" parameterType="map" resultType="Student">
    SELECT <include refid="studentColums"/> from student limit #{offset},#{pageSize}
    </select>
    <!-- 使用注解来传递多个参数 -->
    <select id="findByPage1" resultType="Student">
    SELECT <include refid="studentColums"/> from student limit #{offset},#{pageSize}
    </select>
    <!-- 查询一共有多少学生 -->
    <select id="count" resultType="int">
    select count(*) from student
    </select>
    
    
</mapper>


